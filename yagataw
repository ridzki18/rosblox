-- Checkpoint Teleporter (Simple UI, CoreGui-safe)
-- Loop 0..8: workspace.Checkpoints["i"]
-- Hotkey: RightShift untuk show/hide

-- ===== CONFIG =====
local START_INDEX = 0
local END_INDEX   = 8
local INTERVAL    = 3  -- detik antar teleport
local OFFSET_Y    = 4    -- jarak naik biar nggak nancep ke part
-- ==================

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local TS = game:GetService("TweenService")

local LP = Players.LocalPlayer

-- pilih parent GUI yang paling aman (executor/studio)
local function getGuiParent()
    local ok, ui = pcall(function()
        if gethui then
            local h = gethui()
            if typeof(h) == "Instance" then return h end
        end
        return game:GetService("CoreGui")
    end)
    if ok and ui then return ui end

    -- fallback ke PlayerGui
    local pg = LP:FindFirstChildOfClass("PlayerGui") or LP:WaitForChild("PlayerGui")
    return pg
end

local function getHRP()
    local char = LP.Character or LP.CharacterAdded:Wait()
    return char:WaitForChild("HumanoidRootPart")
end

local function ensurePart(inst)
    if not inst then return nil end
    if inst:IsA("BasePart") then return inst end
    if inst:IsA("Model") and inst.PrimaryPart then return inst.PrimaryPart end
    for _, d in ipairs(inst:GetDescendants()) do
        if d:IsA("BasePart") then return d end
    end
    return nil
end

local function collectCheckpoints()
    local f = workspace:FindFirstChild("Checkpoints")
    local list = {}
    if not f then return list end
    for i = START_INDEX, END_INDEX do
        local node = f:FindFirstChild(tostring(i), false) -- non-recursive sesuai struktur kamu
        local part = ensurePart(node)
        if part then table.insert(list, part) end
    end
    return list
end

-- ===== UI (simple) =====
local parentGui = getGuiParent()

local gui = Instance.new("ScreenGui")
gui.Name = "CP_Teleporter_Simple_Core"
gui.ResetOnSpawn = false
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
gui.Parent = parentGui

local frame = Instance.new("Frame")
frame.Size = UDim2.fromOffset(220, 120)
frame.Position = UDim2.new(0, 20, 0, 150)
frame.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
frame.Parent = gui
Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 10)
local stroke = Instance.new("UIStroke", frame)
stroke.Color = Color3.fromRGB(120, 120, 160)
stroke.Thickness = 1

local title = Instance.new("TextLabel")
title.BackgroundTransparency = 1
title.Size = UDim2.new(1, -40, 0, 28)
title.Position = UDim2.new(0, 10, 0, 6)
title.Font = Enum.Font.GothamBold
title.TextScaled = true
title.TextXAlignment = Enum.TextXAlignment.Left
title.Text = "Checkpoint TP"
title.TextColor3 = Color3.fromRGB(235, 235, 245)
title.Parent = frame

-- efek hue pelan
task.spawn(function()
    local t = 0
    while gui.Parent do
        t += RunService.RenderStepped:Wait()
        title.TextColor3 = Color3.fromHSV((t*0.08)%1, 0.45, 1)
    end
end)

local minimize = Instance.new("TextButton")
minimize.Size = UDim2.fromOffset(26, 26)
minimize.Position = UDim2.new(1, -32, 0, 7)
minimize.Text = "—"
minimize.TextScaled = true
minimize.Font = Enum.Font.GothamSemibold
minimize.BackgroundColor3 = Color3.fromRGB(40, 40, 55)
minimize.TextColor3 = Color3.fromRGB(230, 230, 240)
minimize.Parent = frame
Instance.new("UICorner", minimize).CornerRadius = UDim.new(0, 8)

local toggle = Instance.new("TextButton")
toggle.Size = UDim2.new(1, -20, 0, 40)
toggle.Position = UDim2.new(0, 10, 0, 50)
toggle.Font = Enum.Font.GothamBlack
toggle.TextScaled = true
toggle.Text = "Teleport OFF"
toggle.BackgroundColor3 = Color3.fromRGB(65, 30, 30)
toggle.TextColor3 = Color3.fromRGB(255, 235, 235)
toggle.Parent = frame
Instance.new("UICorner", toggle).CornerRadius = UDim.new(0, 10)

-- draggable via title area
do
    local dragging, p0, f0
    frame.InputBegan:Connect(function(i)
        local onTitle = (i.Position and (i.Position.Y - frame.AbsolutePosition.Y <= 40))
        if i.UserInputType == Enum.UserInputType.MouseButton1 and onTitle then
            dragging, p0, f0 = true, i.Position, frame.Position
            i.Changed:Connect(function()
                if i.UserInputState == Enum.UserInputState.End then dragging = false end
            end)
        end
    end)
    frame.InputChanged:Connect(function(i)
        if dragging and i.UserInputType == Enum.UserInputType.MouseMovement then
            local d = i.Position - p0
            frame.Position = UDim2.new(f0.X.Scale, f0.X.Offset + d.X, f0.Y.Scale, f0.Y.Offset + d.Y)
        end
    end)
end

-- minimize
local minimized = false
minimize.MouseButton1Click:Connect(function()
    minimized = not minimized
    toggle.Visible = not minimized
    frame.Size = minimized and UDim2.fromOffset(220, 40) or UDim2.fromOffset(220, 120)
    minimize.Text = minimized and "+" or "—"
end)

-- hotkey show/hide (RightShift)
UIS.InputBegan:Connect(function(input, gpe)
    if gpe then return end
    if input.KeyCode == Enum.KeyCode.RightShift then
        gui.Enabled = not gui.Enabled
    end
end)

-- ===== LOGIC =====
local active = false
local cps = collectCheckpoints()

local function setToggleUI(on)
    if on then
        toggle.Text = "Teleport ON"
        toggle.BackgroundColor3 = Color3.fromRGB(40, 95, 55)
        toggle.TextColor3 = Color3.fromRGB(230, 255, 230)
    else
        toggle.Text = "Teleport OFF"
        toggle.BackgroundColor3 = Color3.fromRGB(65, 30, 30)
        toggle.TextColor3 = Color3.fromRGB(255, 235, 235)
    end
end

local function loopTeleport()
    local hrp = getHRP()
    while active and gui.Parent do
        if #cps == 0 then cps = collectCheckpoints() end
        for idx = 1, #cps do
            if not active then break end
            local part = cps[idx]
            if not (part and part:IsDescendantOf(workspace)) then
                cps = collectCheckpoints()
                break
            end
            pcall(function()
                hrp.CFrame = CFrame.new(part.Position + Vector3.new(0, OFFSET_Y, 0))
            end)
            task.wait(INTERVAL)
        end
    end
end

toggle.MouseButton1Click:Connect(function()
    active = not active
    setToggleUI(active)
    if active then
        cps = collectCheckpoints() -- refresh tiap mulai
        task.spawn(loopTeleport)
    end
end)

LP.CharacterAdded:Connect(function()
    if active then task.delay(1, function() if active then task.spawn(loopTeleport) end end) end
end)

-- info kecil di output
print("[CP TP] UI parent:", parentGui:GetFullName())
print("[CP TP] Hotkey RightShift untuk show/hide. Loop", START_INDEX, "->", END_INDEX)
